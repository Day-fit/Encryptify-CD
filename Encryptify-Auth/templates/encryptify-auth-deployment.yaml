apiVersion: apps/v1
kind: Deployment
metadata:
  name: encryptify-auth
  labels:
    service-name: auth
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      service-name: auth
  template:
    metadata:
      name: encryptify-auth
      labels:
        service-name: auth
    spec:
      containers:
        - name: encryptify-auth
          image: "{{ .Values.image.repo}}:{{ .Values.image.tag }}"
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 8083
          env:
            - name: SPRING_PROFILES_ACTIVE
              value: {{ .Values.profiles | join ","}}

            - name: REDIS_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: REDIS_HOST
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: REDIS_PASSWORD

            - name: RABBITMQ_USER
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: RABBITMQ_USER
            - name: RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: RABBITMQ_PASSWORD
            - name: RABBITMQ_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: RABBITMQ_HOST

            - name: DB_HOST
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: DB_HOST
            - name: DB_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: DB_USERNAME
            - name: DB_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: DB_PASSWORD
            - name: DB_NAME
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: DB_NAME
                  
            - name: ALLOWED_ORIGINS_PATTERNS
              valueFrom:
                secretKeyRef:
                  name: {{ .Values.auth.existingSecretName }}
                  key: ALLOWED_ORIGINS_PATTERNS