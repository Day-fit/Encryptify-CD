apiVersion: external-secrets.io/v1
kind: ExternalSecret
metadata:
  name: communication-external-secret
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: oci-secret-store
  dataFrom:
    - extract:
        key: "encryptify-infra-secret"
  target:
    name: communication-config
    creationPolicy: Owner
    template:
      engineVersion: v2
      data:
        load_definitions.json: |-
          {
            "users": [
              {
                "name": "{{`{{ .RABBITMQ_SU_USER }}`}}",
                "password": "{{`{{ .RABBITMQ_SU_PASSWORD }}`}}",
                "tags": "administrator"
              },
              {
                "name": "{{`{{ .RABBITMQ_USER }}`}}",
                "password": "{{`{{ .RABBITMQ_PASSWORD }}`}}",
                "tags": "application"
              }
            ],
            "vhosts": [
              { "name": "/" }
            ],
            "permissions": [
              {
                "user": "{{`{{ .RABBITMQ_USER }}`}}",
                "vhost": "/",
                "configure": "",
                "write": ".*",
                "read": ".*"
              },
              {
                "user": "{{`{{ .RABBITMQ_SU_USER }}`}}",
                "vhost": "/",
                "configure": ".*",
                "write": ".*",
                "read": ".*"
              }
            ],
            "queues": [
              { "name": "service.core", "vhost": "/", "durable": true },
              { "name": "service.encryption", "vhost": "/", "durable": true },
              { "name": "service.auth", "vhost": "/", "durable": true },
              { "name": "service.email", "vhost": "/", "durable": true },
              { "name": "service.stats", "vhost": "/", "durable": true },
              { "name": "email.sender", "vhost": "/", "durable": true },
              { "name": "minio.configurer", "vhost": "/", "durable": true },
              { "name": "statistics.configurer", "vhost": "/", "durable": true},
              { "name": "statistics.stream", "vhost": "/", "durable": true, "arguments": {"x-queue-type": "stream", "x-max-length-bytes": 1000000000, "x-stream-max-segment-size-bytes": 500000000 }}
            ],
            "exchanges": [
              { "name": "user.events", "vhost": "/", "type": "topic", "durable": true },
              { "name": "auth.rotation", "vhost": "/", "type": "topic", "durable": true }
            ],
            "bindings": [
              {
                "source": "user.events",
                "vhost": "/",
                "destination": "email.sender",
                "destination_type": "queue",
                "routing_key": "user.created"
              },
              {
                "source": "user.events",
                "vhost": "/",
                "destination": "service.auth",
                "destination_type": "queue",
                "routing_key": "user.verified"
              },
              {
                "source": "user.events",
                "vhost": "/",
                "destination": "minio.configurer",
                "destination_type": "queue",
                "routing_key": "user.setup"
              },
              {
                "source": "user.events",
                "vhost": "/",
                "destination": "statistics.configurer",
                "destination_type": "queue",
                "routing_key": "user.setup"
              },
              {
                "source": "auth.rotation",
                "vhost": "/",
                "destination": "service.core",
                "destination_type": "queue",
                "routing_key": "auth.key-changed"
              },
              {
                "source": "auth.rotation",
                "vhost": "/",
                "destination": "service.encryption",
                "destination_type": "queue",
                "routing_key": "auth.key-changed"
              },
              {
                "source": "auth.rotation",
                "vhost": "/",
                "destination": "service.email",
                "destination_type": "queue",
                "routing_key": "auth.key-changed"
              },
              {
                "source": "auth.rotation",
                "vhost": "/",
                "destination": "service.stats",
                "destination_type": "queue",
                "routing_key": "auth.key-changed"
              }
            ]
          }